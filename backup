#!/usr/bin/ruby

raise 'Must run as root' if Process.euid != 0

raise 'First fork failed' if (pid = fork) == -1
exit unless pid.nil?

Process.setsid
raise 'Second fork failed' if (pid = fork) == -1
exit unless pid.nil?
puts "Daemon pid: #{Process.pid}" # Or save it somewhere, etc.

STDIN.reopen '/dev/null'
STDOUT.reopen '/dev/null', 'a'
STDERR.reopen STDOUT

$:.unshift(File.join(ENV['HOME'], 'ruby'))
require "fileutils.rb"
require "net/smtp.rb"

["machine.rb" , "cycle.rb" , "fileset.rb" , "float.rb" , "fixnum.rb" , "object.rb" , "daemon.rb" ].each {|file|
	load File.join(File.dirname(__FILE__), file)
}

load "/etc/backup.conf"

def parse_config
	@@daemon = Daemon.new("daemon", @@system)

	@@filesets.each{|k, v|
		Fileset.new(k, v)
	}
	@@cycles.each{|k, v|
		Cycle.new(k, v)
	}
	@@machines.each{|k, v|
		Machine.new(k, @@daemon.machine_defaults.merge(v))
	}
end


def reload
	Machine.all.each {|o|
		Machine.destroy(o)
	}
	Cycle.all.each {|o|
		Cycle.destroy(o)
	}
	Fileset.all.each {|o|
		Fileset.destroy(o)
	}
	Daemon.all.each {|o|
		Daemon.destroy(o)
	}
	parse_config
	nil
end

reload

Machine.all.each{|machine|
	@@daemon.log machine.show_config
}

@@cycle_thread ||= Thread.new {
	while true
		@@daemon.cycle
	end
}

@@cycle_thread.join
